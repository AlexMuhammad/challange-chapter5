{
  "openapi": "3.0.3",
  "info": {
    "title": "Challange 5 API Car"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User API Collections"
    },
    {
      "name": "Cars",
      "description": "Car API Collections"
    }
  ],
  "paths": {
    "/current": {
      "get": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Get User Information",
        "description": "to get current user who is logged in",
        "responses": {
          "200": {
            "description": "Status success get current user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "admin"
                        },
                        "email": {
                          "type": "string",
                          "example": "admin@mail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If failed to retrive the data / bad request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RequiredAuth"
                    }
                  ]
                }
              },
              "examples": {
                "requiredAuth": {
                  "summary": "Example empty bearer token",
                  "value": {
                    "status": "FAIL",
                    "message": "Unautorized"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/register": {
      "post": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Register new admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "adminbaru"
                  },
                  "email": {
                    "type": "string",
                    "example": "adminbaru@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "adminbaru123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "status admin successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "adminbaru"
                        },
                        "email": {
                          "type": "string",
                          "example": "adminbaru@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Failed error because forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DontHavePermit"
                    }
                  ]
                },
                "examples": {
                  "dontHavePermit": {
                    "summary": "example invalid role access",
                    "value": {
                      "status": "FAIL",
                      "message": "You don't have permission to access!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Users"],
        "description": "To login to system",
        "summary": "Login User",
        "requestBody": {
          "description": "login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If succefully log in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Admin JWT"
                        },
                        "email": {
                          "type": "string",
                          "example": "admin@mail.com"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywidXNlclJvbGUiOiJhZG1pbiIsImlhdCI6MTY4MzAzOTI4MH0.xqm5GXiUd2i_b6DXAi_LBBTuYLVEQVyrW9lvyXMZAUs"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "get": {
        "tags": ["Cars"],
        "description": "To retrive the list of cars",
        "summary": "Get all car data",
        "responses": {
          "200": {
            "description": "If data successfully retrived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "posts": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "Test Title"
                              },
                              "price": {
                                "type": "integer",
                                "format": "int64",
                                "example": "20000"
                              },
                              "size": {
                                "type": "string",
                                "example": "small"
                              },
                              "image": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/dlgyb9w63/image/upload/v1683484955/car-api-challenge/rjd6zul3wpacenjyys5v.jpg"
                              },
                              "available": {
                                "type": "object",
                                "example": true
                              },
                              "createdBy": {
                                "type": "integer",
                                "example": "1"
                              },
                              "deletedBy": {
                                "type": "integer",
                                "example": "1"
                              },
                              "updatedBy": {
                                "type": "integer",
                                "example": "1"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2022-10-12T13:25:21.995Z"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2022-10-12T13:25:21.995Z"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "format": "int64",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If failed to retrive the data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": ["Cars"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Get car by id",
        "description": "To retrive car by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the car",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If data successfully retrived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "name": {
                          "type": "string",
                          "example": "alex ganteng"
                        },
                        "price": {
                          "type": "integer",
                          "format": "int64",
                          "example": 100000
                        },
                        "size": {
                          "type": "string",
                          "example": "small"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dlgyb9w63/image/upload/v1683484955/car-api-challenge/rjd6zul3wpacenjyys5v.jpg"
                        },
                        "available": {
                          "type": "boolean",
                          "example": true
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-05-06T07:41:44.381Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-05-06T07:41:44.381Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "If failed to retrive the data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string",
                      "example": "car not found!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Cars"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Update a car",
        "description": "To update a car by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Car",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "alex ganteng"
                  },
                  "price": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100000
                  },
                  "size": {
                    "type": "string",
                    "example": "medium"
                  },
                  "available": {
                    "type": "boolean",
                    "example": false
                  },
                  "image": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/dlgyb9w63/image/upload/v1683484955/car-api-challenge/rjd6zul3wpacenjyys5v.jpg"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "If data successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "alex ganteng"
                        },
                        "price": {
                          "type": "integer",
                          "example": 100000
                        },
                        "size": {
                          "type": "string",
                          "example": "medium"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dlgyb9w63/image/upload/v1683484955/car-api-challenge/rjd6zul3wpacenjyys5v.jpg"
                        },
                        "available": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Failed error because forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DontHavePermit"
                    }
                  ]
                },
                "examples": {
                  "dontHavePermit": {
                    "summary": "example invalid role access",
                    "value": {
                      "status": "FAIL",
                      "message": "You don't have permission to access!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "If failed to retrive the data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string",
                      "example": "car not found!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Cars"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Delete a car",
        "description": "To delete a car by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the car",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If data successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Failed error because forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DontHavePermit"
                    }
                  ]
                },
                "examples": {
                  "dontHavePermit": {
                    "summary": "example invalid role access",
                    "value": {
                      "status": "FAIL",
                      "message": "You don't have permission to access!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "If failed to retrive the data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string",
                      "example": "car not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DontHavePermit": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "InvalidToken": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "EmailAlreadyTaken": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "RequiredAuth": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Register": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "register"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "login"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://localhost:8000/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
